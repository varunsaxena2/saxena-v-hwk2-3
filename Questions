if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, ggplot2, dplyr, lubridate, stringr, readxl, data.table, gdata, Matching)

install.packages("cobalt")

data96 <- readRDS("data/output/HCRIS_Data_v1996.rds")
data10 <- readRDS("data/output/HCRIS_Data_v2010.rds")
data10r <- dplyr::select(data10, -hvbp_payment, -hrrp_payment)
#print(colnames(data10))

data=rbind(data96, data10r)

print(colnames(data))
# Read in data into a sorted table
table <- data %>%
  group_by(year, provider_number) %>%
  summarise(num_reports = n())

# Filter groups where the count of reports is greater than 1
multiple_reports <- table %>%
  filter(num_reports > 1)

# Count the number of unique hospitals in those groups
num_hospitals_multiple_reports <- multiple_reports %>%
  group_by(year) %>%
  summarise(num_hospitals = n_distinct(provider_number))

# Print the number of hospitals with multiple reports in each year
distincthost <- n_distinct(data$provider_number)

print(num_hospitals_multiple_reports)
ggplot(num_hospitals_multiple_reports, aes(x = year, y = num_hospitals))

data <- data %>%
  filter(tot_charges > 0)

viol1 <- data %>%
  ggplot(aes(x = as.factor(year), y = tot_charges)) +
  theme(axis.text.x = element_text(angle = 30, hjust = 0.5, vjust = 0.5)) +
  #geom_jitter(alpha = .05) +
  geom_violin(aes(group = cut_width(year, 1)), alpha = .9, draw_quantiles = c(0.5)) +
  labs(title="Distribution of Total Charges", x="\nYear", y="Total Charges")
  

estdata <- data %>%
  mutate(discount_factor = 1-tot_discounts/tot_charges,
  price_num = (ip_charges + icu_charges + ancillary_charges)*discount_factor - tot_mcare_payment,
  price_denom = tot_discharges - mcare_discharges,
  price = price_num/price_denom)

estdata <- estdata %>%
  filter(price > 0, price < 100000)

viol2 <- estdata %>%
  ggplot(aes(x = year, y = price)) +
  #geom_jitter(alpha = 0.2) +
  geom_violin(aes(group = cut_width(year, 1)), alpha = 0.1, draw_quantiles = c(0.1)) +
    labs(title="Distribution of Estimated Prices", x="Year", y="Estimated Prices")


data12 <- data10 %>%
  mutate(discount_factor = 1-tot_discounts/tot_charges,
  price_num = (ip_charges + icu_charges + ancillary_charges)*discount_factor - tot_mcare_payment,
  price_denom = tot_discharges - mcare_discharges,
  price = price_num/price_denom)

print(colnames(data12))

data12 <- data12 %>%
  filter(year == 2012, price > 0, price < 100000, !is.na(price), beds > 30) %>%
  mutate(hvbp_payment = ifelse(is.na(hvbp_payment), 0, hvbp_payment),
  hrrp_payment = ifelse(is.na(hrrp_payment), 0, abs(hrrp_payment)), #<<
  penalty = (hvbp_payment - hrrp_payment < 0)) #<<

penalized <- data12 %>%
  group_by(penalty) %>%
  summarize(p = mean(price))

data12 <- data12 %>%
  mutate(quartile = ntile(beds, 4))

bedsize <- data12 %>%
  group_by(quartile) %>%
  summarize(b = mean(price))


lp.vars <- data12 %>% 
  dplyr::select(beds, quartile, penalty, quartile, 
         quartile, price) %>%
  dplyr::filter(complete.cases(.))
lp.covs <- lp.vars %>% dplyr::select(-c("penalty","price"))


v.name=data.frame(new=c("Beds","Quartile", "Penalty",
                   "Price"))

# Part 1: Nearest Neighbor Matching (Inverse Variance Distance)
m.nn.var2 <- Matching::Match(Y=lp.vars$price,
                             Tr=lp.vars$penalty,
                             X=lp.covs,
                             M=1,   #<<
                             Weight=1,
                             estimand="ATE")
                             

#Part 2: Nearest neighbor matching (1-to-1) with Mahalanobis distance
m.nn.md <- Matching::Match(Y=lp.vars$price,
                           Tr=lp.vars$penalty,
                           X=lp.covs,
                           M=1,
                           Weight=2,
                           estimand="ATE")                           


#Part 3: Inverse propensity weighting
logit.model <- glm(penalty ~ beds + quartile + price, family=binomial, data=lp.vars)
ps <- fitted(logit.model)
m.nn.ps <- Matching::Match(Y=lp.vars$price,
                           Tr=lp.vars$penalty,
                           X=ps,
                           M=1,
                           estimand="ATE")


#Part 4: Simple linear regression 
reg.dat <- lp.vars %>% ungroup() %>% filter(complete.cases(.)) %>%
  mutate(beds_diff = penalty*(beds - mean(beds)))
reg <- lm(price ~ penalty + beds + quartile + 
            beds_diff,
          data=reg.dat)
summary(reg)

library(cobalt)
# Extract ATE estimates
ATE_nn_var <- bal.tab(m.nn.var2, covs = lp.covs, treat = lp.vars$penalty)$ATE
ATE_nn_md <- bal.tab(m.nn.md, covs = lp.covs, treat = lp.vars$penalty)$ATE
ATE_nn_ps <- bal.tab(m.nn.ps, covs = lp.covs, treat = lp.vars$penalty)$ATE
ATE_reg <- coef(summary(reg))["penaltyTRUE", "Estimate"]

# Create a data frame for the results
results_table <- data.frame(
  Estimator = c("Nearest Neighbor (Inverse Variance Distance)", 
                "Nearest Neighbor (Mahalanobis Distance)", 
                "Inverse Propensity Weighting", 
                "Simple Linear Regression"),
  ATE = c(ATE_nn_var, ATE_nn_md, ATE_nn_ps, ATE_reg)
)
# Print the results table
print(results_table)

save.image("analysis/Hwk2_workspace.Rdata")


